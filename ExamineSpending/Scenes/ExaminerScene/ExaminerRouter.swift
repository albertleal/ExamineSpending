//
//  ExaminerRouter.swift
//  ExamineSpending
//
//  Copyright (c) 2018 Aleksi Sitomaniemi. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol ExaminerRoutingLogic {
  func toTransactionPager(segue: UIStoryboardSegue?)
  func toDateSelection(segue: UIStoryboardSegue?)
}

protocol ExaminerDataPassing {
  var dataStore: ExaminerDataStore? { get }
}

class ExaminerRouter: NSObject, ExaminerRoutingLogic, ExaminerDataPassing {
  weak var viewController: ExaminerViewController?
  var dataStore: ExaminerDataStore?

  deinit {
    log.debug("")
  }

  // MARK: Routing
  func toTransactionPager(segue: UIStoryboardSegue?) {
    log.verbose("")
    if let segue = segue {
      if let destinationVC = segue.destination as? TransactionPagerViewController {
        destinationVC.transactions = dataStore?.getFilteredTransactions() ?? []
        destinationVC.txnIndex = dataStore?.browsingIndex ?? 0
      }
    }
  }

  func toDateSelection(segue: UIStoryboardSegue?) {
    log.verbose("")
    if let segue = segue {
      if let vc = segue.destination as? DateSelectionViewController {
        vc.dismissalDelegate = self
        vc.initialSelection = dataStore?.selectedRange ?? .currentDay
      }
    }
  }
}

extension ExaminerRouter: DismissalDelegate {
  func finishedShowing(viewController: UIViewController, result: [String: Any?]?) {
    log.verbose("")
    viewController.dismiss(animated: true, completion: nil)
    if let range = result?["SelectedRange"] as? RangeOption {
      if dataStore?.selectedRange != range {
        dataStore?.selectedRange = range
      }
    }
  }
}
