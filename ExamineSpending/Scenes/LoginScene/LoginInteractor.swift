//
//  LoginInteractor.swift
//  ExamineSpending
//
//  Copyright (c) 2018 Aleksi Sitomaniemi. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Alamofire

protocol LoginWorker {
  func authenticate(_ completion: @escaping (ESError?) -> Void)
}

protocol LoginBusinessLogic {
  func login(_ request: Login.Auth.Request)
}

protocol LoginDataStore {
  var token: String { get set }
}

class LoginInteractor: LoginBusinessLogic, LoginDataStore {
  var token: String = ""
  var presenter: LoginPresentationLogic?

  var worker: LoginWorker?

  // MARK: Do something
  func login(_ request: Login.Auth.Request) {
    log.verbose("")
    switch request.bank {
    case .nordea:
      worker = NordeaLoginWorker()
    case .op:
      worker = OPLoginWorker()
    }
    worker?.authenticate({ (err) in
      self.presenter?.presentLoginResponse(response: Login.Auth.Response(error: err))
    })
  }
}
